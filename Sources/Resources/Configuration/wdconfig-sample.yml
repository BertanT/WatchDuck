#################################################################################################################################
# wdconfig-sample.yml
#
# Copyright (C) 2025 Mehmet Bertan Tarakcioglu
#
# This file is part of WatchDuck.
#
# WatchDuck is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# WatchDuck is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along with WatchDuck.
# If not, see <https://www.gnu.org/licenses/>.
#################################################################################################################################

#################################################################################################################################
# This is a sample configuration file for WatchDuck. All options are included here, with the
#    commented lines indicating the default values. Feel free to customize them to your liking :)
#################################################################################################################################


# Time interval between each automatic check, in seconds. (Min: 20, Max: 86400)
# refreshInterval: 90

# Allows WatchDuck to delete and overwrite the JSON log file in its entirity if it contains
#     invalid data or was encoded with an incompatible API version.
# overwriteCourruptLogs: true

# The maximum number of outage incidents the logs store, including ongoing. When the limit is
#     reached, adding a new incident deletes the oldest entry.
# maxOutageLogs: 10

# The full output path for the JSON log file, including the filename and extension. Set to
#     "./wdlogs.json" by default.
JSONOutputPath: "/usr/local/var/www/WatchDuck/wdlogs.json"

# Controls whether WatchDuck generates a static HTML page. True by default.
# renderHTML: true

# The directory path where the static HTML page and other website resources will live. Set to
#     ./WDHTML by default.
HTMLOutputDirectory: "/usr/local/var/www/WatchDuck/"

# Controls whether WatchDuck tries to copy default stylesheets and website assets if they don't
# already exist in the directory.
# tryDefaultAssets: true

# HTML meta tag for the "title" attribute. Uses the "navHeaderValue" if not set.
metaTitle: null

# HTML meta tag for the "description" attribute. Uses the "metaTitle" value if not set.
metaDescription: "Static status site generated by WatchDuck!"

# Array of strings that represent the HTML meta tag for the "keywords" attribute. Empty
#    string if not set.
metaKeywords: ["Website Status", "Service Status", "Uptime", "Monitoring",
    "Online", "Outage", "Availability"]

# HTML meta tag for the "author" attribute.
# metaAuthor: "WatchDuck"

# HTML meta tag for the "copyright" attribute. Uses the "metaAuthor" value if not set.
metaCopyright: null

# HTML meta tag for the "language" attribute.
# metaLanguage: "EN"

# HTML meta tag for the "robots" attribute.
# metaRobots: "all"

# Specifies the website title reflected on the header and the tab title.
# navHeaderTitle: "WatchDuck Status"

# Shows a "Get Support" button in the header that links to the provided URL if set. Set to
#     null by default.
supportURL: "https://github.com/bertant/WatchDuck"

# Appends the specified text at the end of the copyright stamp in the footer followed by a
#     space. Set to null by default.
copyrightName: "BertanT"

# If "copyrightName" is not null, links its text to the provided URL if set. Set to null by
#     default.
copyrightURL: "https://github.com/bertant/WatchDuck"

# Shows a "Contact" button at the footer navigation that links to the provided URL if set.
#     Set to null by default.
contactURL: "https://github.com/bertant/WatchDuck"

# Shows a "Privacy Policy" button at the footer navigation that links to the provided URL
#     if set. Set to null by default.
privacyPolicyURL: "https://github.com/bertant/WatchDuck"

# The array of checks that WatchDuck will conduck at each run.
checks:
      # The type of the check.
    - type: responseCode

      # The name of the check to be displayed on the website and logs. Must be unique!
      name: "Swift Website"

      url: "https://www.swift.org"
      method: "GET"
      headers:
        User-Agent: Mozilla/5.0
      body: null

      # The maximum amount of time WatchDuck will wait for a service to respond before
      #     failing, in seconds. (Min: 0<, Max: 120)
      # timeout: 30

      # The number of times WathcDuck will retry to load a service before marking it as offline.
      # retries: 3

      # How long WatchDuck will wait before retrying a failed check request, in seconds.
      # (Min: 0<, Max: 300)
      # retryInterval: 30

      # If true, indefinitely waits for this computer to connect to the internet before running the check.
      # waitForConnectivity: true

      # WatchDuck will only consider the website to be online if the HTTP response code falls in the
      #     array of ranges specified below.
      # responseRanges:
      #   - [200, 299]

      # WatchDuck will only consider the website to be online if the HTML content contains all the strings
      #     specified in the array below. Case-sensitive!
      keywords:
        - "Apple"
        - "blog"
        - "documentation"
        - "install"
